import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from config.config import Config, load_config
from sqlalchemy.ext.asyncio import AsyncSession
from database import Horo
from sqlalchemy import select
from sqlalchemy.engine import ScalarResult

router = Router()

Config = load_config()

@router.message(F.text.startswith('üîÆ –û–≤–µ–Ω –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–û–≤–µ–Ω'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–û–≤–µ–Ω',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –û–≤–Ω–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–û–≤–µ–Ω',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –û–≤–Ω–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –û–≤–Ω–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –¢–µ–ª–µ—Ü –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–¢–µ–ª–µ—Ü'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–¢–µ–ª–µ—Ü',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –¢–µ–ª—å—Ü–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–¢–µ–ª–µ—Ü',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –¢–µ–ª—å—Ü–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –¢–µ–ª—å—Ü–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –ë–ª–∏–∑–Ω–µ—Ü—ã –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–ë–ª–∏–∑–Ω–µ—Ü—ã'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–ë–ª–∏–∑–Ω–µ—Ü—ã',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –ë–ª–∏–∑–Ω–µ—Ü–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–ë–ª–∏–∑–Ω–µ—Ü—ã',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –ë–ª–∏–∑–Ω–µ—Ü–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –ë–ª–∏–∑–Ω–µ—Ü–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –†–∞–∫ –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–†–∞–∫'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–†–∞–∫',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –†–∞–∫–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–†–∞–∫',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –†–∞–∫–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –†–∞–∫–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –õ–µ–≤ –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–õ–µ–≤'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–õ–µ–≤',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –õ—å–≤–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–õ–µ–≤',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –õ—å–≤–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –õ—å–≤–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –î–µ–≤–∞ –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–î–µ–≤–∞'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–î–µ–≤–∞',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –î–µ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–î–µ–≤–∞',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –î–µ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –î–µ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –í–µ—Å—ã –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–í–µ—Å—ã'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–í–µ—Å—ã',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –í–µ—Å–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–í–µ—Å—ã',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –í–µ—Å–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –í–µ—Å–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –°–∫–æ—Ä–ø–∏–æ–Ω –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–°–∫–æ—Ä–ø–∏–æ–Ω'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–°–∫–æ—Ä–ø–∏–æ–Ω',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –°–∫–æ—Ä–ø–∏–æ–Ω–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–°–∫–æ—Ä–ø–∏–æ–Ω',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –°–∫–æ—Ä–ø–∏–æ–Ω–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –°–∫–æ—Ä–ø–∏–æ–Ω–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –°—Ç—Ä–µ–ª–µ—Ü –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–°—Ç—Ä–µ–ª–µ—Ü'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–°—Ç—Ä–µ–ª–µ—Ü',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –°—Ç—Ä–µ–ª—å—Ü–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–°—Ç—Ä–µ–ª–µ—Ü',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –°—Ç—Ä–µ–ª—å—Ü–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –°—Ç—Ä–µ–ª—å—Ü–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –ö–æ–∑–µ—Ä–æ–≥ –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–ö–æ–∑–µ—Ä–æ–≥'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–ö–æ–∑–µ—Ä–æ–≥',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –ö–æ–∑–µ—Ä–æ–≥–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–ö–æ–∑–µ—Ä–æ–≥',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –ö–æ–∑–µ—Ä–æ–≥–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –ö–æ–∑–µ—Ä–æ–≥–æ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –í–æ–¥–æ–ª–µ–π –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–í–æ–¥–æ–ª–µ–π'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–í–æ–¥–æ–ª–µ–π',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –í–æ–¥–æ–ª–µ–µ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–í–æ–¥–æ–ª–µ–π',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –í–æ–¥–æ–ª–µ–µ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –í–æ–¥–æ–ª–µ–µ–≤ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass
    
@router.message(F.text.startswith('üîÆ –†—ã–±—ã –∑–∞–≤—Ç—Ä–∞'))
async def horo_oven_today(msg: Message, session: AsyncSession):
    if msg.from_user.id == int(Config.tg_bot.admin_id):
        
        horo_tomorrow = await session.execute(select(Horo.horo_tomorrow).where(Horo.zodiac == '–†—ã–±—ã'))
        horo_tomorrow = horo_tomorrow.one_or_none()
        horo_tomorrow = horo_tomorrow[0]
        horo_tomorrow = horo_tomorrow.replace('–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è')
        horo_tomorrow = horo_tomorrow.replace('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
        
        horo_today = Horo(
                zodiac='–†—ã–±—ã',
                horo_today=horo_tomorrow
        )
        try:
            await session.merge(horo_today)
            await session.commit()
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –†—ã–± –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    
        horo = Horo(
            zodiac='–†—ã–±—ã',
            horo_tomorrow=msg.text
        )
        try:
            await session.merge(horo)
            await session.commit()
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –†—ã–± –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!')
        except:
            await msg.answer('–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –†—ã–± –Ω–∞ –∑–∞–≤—Ç—Ä–∞ - –æ—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã')
    else:
        pass